{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Preview/Preview.module.css","components/ImageGallery/ImageGallery.module.css","components/ButtonLoadMore/ButtonLoadMore.module.css","components/Spiner/Spiner.module.css","components/Searchbar/Searchbar.js","services/pixabayAPI.js","components/Preview/Preview.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/LargeImage/LargeImage.js","components/ButtonLoadMore/ButtonLoadMore.js","components/Spiner/Spiner.js","components/ImageFinder/ImageFinder.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","inputQuery","setInputQuery","className","s","SearchForm","e","preventDefault","trim","toast","error","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","query","page","a","fetch","response","ok","json","images","hits","Promise","reject","Error","fetchPixabayAPI","Preview","ImageGalleryItem","id","url","onClick","ImageGalleryItemImage","src","alt","ImageGallery","map","webformatURL","modalRoot","document","querySelector","Modal","onClose","children","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","overlay","target","modal","LargeImage","ButtonLoadMore","onLoadMore","Button","Spiner","color","height","width","timeout","ImageFinder","setImages","setPage","setError","status","setStatus","onFetch","setOnFetch","showModal","setShowModal","largeImgURL","setLargeImgURL","ignore","togleOnFetch","newImages","length","errorStatus","scrollTo","top","documentElement","scrollHeight","behavior","renderImages","togleModal","message","find","image","Number","largeImageURL","App","setQuery","autoClose","position","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.775dd148.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem___yqG4\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__ud9_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__3SBvL\",\"modal\":\"Modal_modal__1b9-m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preview\":\"Preview_Preview__116Sa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2BYys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"ButtonLoadMore_Button__3f2ao\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spiner\":\"Spiner_Spiner__2APNN\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nimport s from './Searchbar.module.css';\n\nfunction Searchbar({ onSubmit }) {\n  const [inputQuery, setInputQuery] = useState('');\n\n  const handleInputQuery = e => {\n    setInputQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (inputQuery.trim() === '') {\n      toast.error('Input query to find image...');\n      return;\n    }\n\n    onSubmit(inputQuery);\n    setInputQuery('');\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={s.SearchFormButton}>\n          <span className={s.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={inputQuery}\n          onChange={handleInputQuery}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","async function fetchPixabayAPI(query, page) {\n  const response = await fetch(\n    `https://pixabay.com/api/?key=23604393-9751c4fdb7943747aa1d7afad&q=${query}&page=${page}&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n  if (response.ok) {\n    const images = await response.json();\n    return images.hits;\n  }\n  return await Promise.reject(\n    new Error(`No image with query \"${query}\" found.`),\n  );\n}\n\nexport default fetchPixabayAPI;\n","import s from './Preview.module.css';\n\nfunction Preview() {\n  return <div className={s.Preview}>Enter search query </div>;\n}\n\nexport default Preview;\n","import PropTypes from 'prop-types';\n\nimport s from './ImageGalleryItem.module.css';\n\nfunction ImageGalleryItem({ id, url, onClick }) {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        className={s.ImageGalleryItemImage}\n        src={url}\n        alt=\"Result of your query\"\n        id={id}\n        onClick={onClick}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.number,\n  url: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\n\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nimport s from './ImageGallery.module.css';\n\nfunction ImageGallery({ images, onClick }) {\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(({ id, webformatURL }) => {\n        return (\n          <ImageGalleryItem\n            key={id}\n            id={id}\n            url={webformatURL}\n            onClick={onClick}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number, webformatURL: PropTypes.string }),\n  ),\n  onClick: PropTypes.func,\n};\n\nexport default ImageGallery;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ onClose, children }) {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackDropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.overlay} onClick={handleBackDropClick}>\n      <div className={s.modal}>{children}</div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import PropTypes from 'prop-types';\n\nfunction LargeImage({ url }) {\n  return <img src={url} alt=\"Large sample\" />;\n}\n\nLargeImage.propTypes = {\n  url: PropTypes.string,\n};\n\nexport default LargeImage;\n","import PropTypes from 'prop-types';\n\nimport s from './ButtonLoadMore.module.css';\n\nfunction ButtonLoadMore({ onLoadMore }) {\n  return (\n    <button className={s.Button} type=\"button\" onClick={onLoadMore}>\n      Load more\n    </button>\n  );\n}\n\nButtonLoadMore.propTypes = {\n  onLoadMore: PropTypes.func,\n};\n\nexport default ButtonLoadMore;\n","import Loader from 'react-loader-spinner';\n\nimport s from './Spiner.module.css';\n\nfunction Spiner() {\n  return (\n    <div className={s.Spiner}>\n      <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000} //3 secs\n      />\n    </div>\n  );\n}\n\nexport default Spiner;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport fetchPixabayAPI from '../../services/pixabayAPI';\n\nimport Preview from '../Preview';\nimport ImageGallery from '../ImageGallery';\nimport Modal from '../Modal';\nimport LargeImage from '../LargeImage';\nimport ButtonLoadMore from '../ButtonLoadMore';\nimport Spiner from '../Spiner';\n\nfunction ImageFinder({ query }) {\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [onFetch, setOnFetch] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [largeImgURL, setLargeImgURL] = useState('');\n\n  useEffect(() => {\n    setImages([]);\n    setPage(1);\n  }, [query]);\n\n  useEffect(() => {\n    let ignore = false;\n\n    async function renderImages() {\n      togleOnFetch();\n      try {\n        const newImages = await fetchPixabayAPI(query, page);\n\n        if (newImages.length === 0) {\n          const error = new Error('No images for this query');\n          errorStatus(error);\n        } else {\n          if (!ignore) {\n            setImages(images => [...images, ...newImages]);\n            setStatus('resolved');\n          }\n\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        }\n      } catch (error) {\n        errorStatus(error);\n      }\n      togleOnFetch();\n    }\n\n    query && renderImages();\n\n    return () => {\n      ignore = true;\n    };\n  }, [page, query]);\n\n  const errorStatus = error => {\n    setError(error);\n    setStatus('rejected');\n  };\n\n  const togleOnFetch = () => {\n    setOnFetch(onFetch => !onFetch);\n  };\n\n  const togleModal = () => {\n    setShowModal(showModal => !showModal);\n  };\n\n  const onImageClick = e => {\n    setLargeImgURL(\n      images.find(image => image.id === Number(e.target.id)).largeImageURL,\n    );\n    togleModal();\n  };\n\n  if (status === 'idle') {\n    return <Preview />;\n  }\n\n  if (status === 'rejected') {\n    return <div>{error.message}</div>;\n  }\n\n  if (status === 'resolved') {\n    return (\n      <>\n        <ImageGallery images={images} onClick={onImageClick} />\n\n        {showModal && (\n          <Modal onClose={togleModal}>\n            <LargeImage url={largeImgURL} />\n          </Modal>\n        )}\n\n        {onFetch && <Spiner />}\n\n        <ButtonLoadMore onLoadMore={() => setPage(page => page + 1)} />\n      </>\n    );\n  }\n}\n\nImageFinder.propTypes = {\n  query: PropTypes.string,\n};\n\nexport default ImageFinder;\n","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\nimport Searchbar from './components/Searchbar';\nimport ImageFinder from './components/ImageFinder';\nimport './App.css';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={query => setQuery(query)} />\n      <ImageFinder query={query} />\n      <ToastContainer autoClose={3000} position=\"top-center\" />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3kkOy\",\"SearchForm\":\"Searchbar_SearchForm__3AZhF\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1N5Kj\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3SloZ\",\"SearchFormInput\":\"Searchbar_SearchFormInput__21YwN\"};"],"sourceRoot":""}